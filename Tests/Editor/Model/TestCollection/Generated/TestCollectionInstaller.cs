// <auto-generated>
//	 This code was generated by a tool.
//
//	 Changes to this file may cause incorrect behavior and will be lost if
//	 the code is regenerated.
// </auto-generated>

using pindwin.umvr.Model;
using pindwin.umvr.Reactor;
using pindwin.umvr.Repository;
using pindwin.umvr.Serialization;
using Zenject;

namespace Model.TestCollection
{
	public partial class TestCollectionFactory : ModelFactory<ITestCollection, TestCollectionModel>
	{
		public TestCollectionFactory(IRepository<ITestCollection> repository, [InjectOptional] ISerializer<TestCollectionModel> serializer) : base(repository, serializer)
		{ }
	}

	public partial class TestCollectionRepository : Repository<ITestCollection, TestCollectionModel, TestCollectionReactor>
	{
		public TestCollectionRepository(TestCollectionReactorFactory testCollectionReactorFactory) : base(testCollectionReactorFactory)
		{ }
	}
	
	public class TestCollectionReactorFactory : ReactorFactory<TestCollectionModel, TestCollectionReactor>
	{ }
}

namespace Model.TestCollection.Generated
{
	public class TestCollectionInstallerBase : Installer<TestCollectionInstallerBase>
	{
		public override void InstallBindings()
		{
			Container.BindFactory<Id, TestCollectionModel, TestCollectionFactory>();
			Container.Bind<IModelFactory<ITestCollection>>().To<TestCollectionFactory>().FromResolve();
			Container.BindFactory<TestCollectionModel, TestCollectionReactor, TestCollectionReactorFactory>();
			Container.BindInterfacesAndSelfTo<TestCollectionRepository>().AsSingle();
		}
	}
}